[{"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/index.js":"1","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/App.js":"2","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/reportWebVitals.js":"3","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/redux/index.js":"4","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/utils/SocketContext.js":"5","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/redux/NicknameReducer.js":"6","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/index.js":"7","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/AppHead.js":"8","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/PreGame.js":"9","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Card.js":"10","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Game.js":"11","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Lobby.js":"12"},{"size":1122,"mtime":1640308129891,"results":"13","hashOfConfig":"14"},{"size":1016,"mtime":1640405139781,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1640308129893,"results":"16","hashOfConfig":"14"},{"size":361,"mtime":1640308129892,"results":"17","hashOfConfig":"14"},{"size":92,"mtime":1640308129893,"results":"18","hashOfConfig":"14"},{"size":438,"mtime":1640308129892,"results":"19","hashOfConfig":"14"},{"size":121,"mtime":1640308129891,"results":"20","hashOfConfig":"14"},{"size":720,"mtime":1640405139782,"results":"21","hashOfConfig":"14"},{"size":3036,"mtime":1640405139783,"results":"22","hashOfConfig":"14"},{"size":3062,"mtime":1640468686593,"results":"23","hashOfConfig":"14"},{"size":42333,"mtime":1640471292523,"results":"24","hashOfConfig":"14"},{"size":5720,"mtime":1640405143055,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"j82sim",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/index.js",[],["54","55"],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/App.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/reportWebVitals.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/redux/index.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/utils/SocketContext.js",["56"],"import React, { createContext } from 'react';\n\nexport const SocketContext = createContext();","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/redux/NicknameReducer.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/index.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/AppHead.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/PreGame.js",["57"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'\nimport { setNickname } from '../redux/NicknameReducer';\nimport { Box, Button, Grid, TextField } from '@mui/material';\n\nexport const PreGame = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [roomId, setRoomId] = useState('');\n    const [protoname, setProtoname] = useState('')\n    const [isTouched, setIsTouched] = useState(false);\n\n    const handleNickname = (e) => {\n\n        console.log(e.target.value.length)\n        if (e.target.value.length > 0) {\n            setProtoname(e.target.value)\n            setIsTouched(true)\n        } else {\n            setIsTouched(false)\n        }\n    }\n\n    const handleLobbyCode = (e) => {\n        setRoomId(e.target.value)\n    }\n\n    // dispatch(setNickname(protoname))\n\n    const handleMakeRoom = () => {\n        dispatch(setNickname(protoname))\n        const newName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n        history.push(`/lobby/${newName}`)\n    }\n\n    const handleJoinRoom = () => {\n        dispatch(setNickname(protoname))\n        history.push(`/lobby/${roomId}`)\n    }\n\n\n    return (\n        <Grid container>\n            <Grid item xs={4.5}></Grid>\n            <Grid item xs>\n                <Box sx={{ px: 2, py: 10 }}>\n                    <Box component='img' sx={{ width: '100%' }} alt=\"red logo featuring cards that are used in the fun and interesting family game called red.\" src='/redlogo.png' />\n                    <TextField color='warning' label=\"Enter your nickname\" variant=\"outlined\" sx={{ mt: 2, width: '100%', color: 'brown' }} onChange={(e) => handleNickname(e)} />\n                    {\n                        isTouched\n                            ? <Button variant='outlined' sx={{ mt: 2, width: '100%' }} onClick={handleMakeRoom}>New Game</Button>\n                            : <Button disabled variant='outlined' sx={{ mt: 2, width: '100%' }}>New Game</Button>\n                    }\n                    {\n                        isTouched\n                            ? (\n                                <Box>\n                                    <TextField color='warning' label=\"Enter your lobby code\" variant=\"outlined\" sx={{ mt: 2, width: '100%', color: 'brown' }} onChange={(e) => handleLobbyCode(e)} />\n                                    {\n                                        roomId.length > 0\n                                            ? <Button variant='outlined' sx={{ mt: 2, width: '100%' }} onClick={handleJoinRoom}>Join Game</Button>\n                                            : <Button disabled variant='outlined' sx={{ mt: 2, width: '100%' }}>Join Game</Button>\n                                    }\n                                </Box>\n                            )\n                            : null\n                    }\n\n                </Box>\n            </Grid>\n            <Grid item xs={4.5}></Grid>\n        </Grid>\n    );\n}\n","/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Card.js",[],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Game.js",["58","59","60","61"],"/Users/kojinglick/Dev/socketsJs/v4/red/client/src/components/Lobby.js",["62"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from 'react-router';\nimport { SocketContext } from '../utils/SocketContext';\n\nimport { Box, Grid, Typography, List, ListItem, ListItemText, ListItemIcon, Button } from '@mui/material'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst Lobby = ({ socket }) => {\n    const nickname = useSelector(state => state.nickname.nickname)\n    const { id } = useParams();\n    const history = useHistory();\n\n    const [players, setPlayers] = useState([]);\n    const [failure, setFailure] = useState(false);\n    const [playable, setPlayable] = useState(false);\n    const [disable, setDisable] = useState(false)\n\n    const handlePlay = () => {\n        socket.emit('clientToServerLobbyPlay', id)\n    }\n\n    const handleReady = () => {\n        console.log('ready')\n        setDisable(true)\n        socket.emit('clientToServerLobbyReady', id)\n    }\n\n    useEffect(() => {\n        let ready = false;\n        if (players.length > 1) {\n            for (let i = 0; i < players.length; i++) {\n                if (!!players[i].r) {\n                    ready = true\n                } else {\n                    ready = false\n                    break\n                }\n            }\n        }\n        setPlayable(ready)\n    }, [players])\n\n    useEffect(() => {\n        socket.emit('clientToServerJoinLobby', [nickname, id]);\n\n        socket.on('serverToClientLobbyJoinSuccess', room => {\n            console.log(room)\n            setPlayers([...room.p])\n        })\n\n        socket.on('serverToClientLobbyJoinFailure', () => {\n            console.log('full lobby')\n            setFailure(true);\n\n        })\n\n        socket.on('serverToClientPlayers', (players) => {\n            console.log(players)\n            setPlayers([...players]);\n        });\n\n        socket.on('serverToClientLobbyMax', () => {\n            console.log('ready up')\n        })\n\n        socket.on('serverToClientGameStart', () => {\n            history.push(`/game/${id}`)\n        })\n\n        return () => {\n            socket.off('serverToClientLobbyJoinSuccess');\n            socket.off('serverToClientLobbyJoinFailure');\n            socket.off('serverToClientLobbyMax');\n            socket.off('serverToClientGameStart');\n        }\n\n    }, [])\n\n    return (\n        <Box sx={{ mt: 3 }}>\n            <Grid container>\n                <Grid item xs={4.5}>\n\n                </Grid>\n\n                <Grid item xs>\n                    <Box>\n                        {\n                            failure ? <p>full lobby :(</p> :\n                                <Box sx={{ alignItems: 'center', my: 12 }}>\n                                    <Typography variant='h4'>Lobby: <code sx={{borderRadius: \"3px\", borderStyle: \"solid\", borderWidth: '1px'}}>{id}</code></Typography>\n                                    <List>\n                                        {players.length > 0\n                                            ? players.map((p, i) => (\n                                                <ListItem key={i}>\n                                                    <ListItemIcon>\n                                                        {p.r ? <CheckBoxIcon/> : <CheckBoxOutlineBlankIcon onClick={handleReady}/> }\n                                                    </ListItemIcon>\n                                                    <ListItemText>\n                                                        {p.n}\n                                                    </ListItemText>\n                                                </ListItem>\n                                            )) : 'loading'\n                                        }\n                                        {players.length < 4\n                                            ? [...Array(4 - players.length)].map((p, i) => (\n                                                <ListItem key={i}><ListItemText>waiting for player...</ListItemText></ListItem>\n                                            )) : null\n                                        }\n                                    </List>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={6}>\n                                            {\n                                                disable ? <Button variant='filled' sx={{ backgroundColor: 'green', color: 'white', mt: 3, width: '100%' }} >Ready</Button> : <Button variant='outlined' sx={{ mt: 3, width: '100%' }} onClick={handleReady}>Ready</Button>\n                                            }\n\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            {\n                                                playable ? (\n                                                    <Button variant='outlined' sx={{ mt: 3, width: '100%' }} onClick={handlePlay}>Play</Button>\n                                                ) : <Button disabled variant='outlined' sx={{ mt: 3, width: '100%' }}>Play</Button>\n                                            }\n\n                                        </Grid>\n                                    </Grid>\n\n                                </Box>\n\n                        }\n                    </Box>\n\n                </Grid>\n                <Grid item xs={4.5}>\n\n                </Grid>\n            </Grid>\n        </Box >\n    )\n}\n\nexport const WrappedLobby = (props) => (\n    <SocketContext.Consumer>\n        {socket => <Lobby {...props} socket={socket} />}\n    </SocketContext.Consumer>\n)",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"72","line":41,"column":11,"nodeType":"69","messageId":"70","endLine":41,"endColumn":19},{"ruleId":"67","severity":1,"message":"73","line":44,"column":12,"nodeType":"69","messageId":"70","endLine":44,"endColumn":22},{"ruleId":"67","severity":1,"message":"74","line":44,"column":24,"nodeType":"69","messageId":"70","endLine":44,"endColumn":37},{"ruleId":"67","severity":1,"message":"75","line":45,"column":12,"nodeType":"69","messageId":"70","endLine":45,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":79,"column":8,"nodeType":"78","endLine":79,"endColumn":10,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'controls' is assigned a value but never used.","'scoreboard' is assigned a value but never used.","'setScoreboard' is assigned a value but never used.","'endGame' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'id', 'nickname', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [history, id, nickname, socket]",{"range":"85","text":"86"},[2409,2411],"[history, id, nickname, socket]"]